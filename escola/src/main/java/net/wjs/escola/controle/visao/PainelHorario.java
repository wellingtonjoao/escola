package br.com.controle.visao;

import br.com.controle.util.modelo.Disciplina;
import br.com.controle.util.modelo.Horario;
import br.com.controle.util.modelo.Professor;
import br.com.controle.util.modelo.Turma;
import br.com.controle.util.negocio.HorarioRN;
import br.com.controle.util.negocio.ProfessorRN;
import br.com.controle.util.negocio.TurmaRN;
import br.com.controle.visao.abstractModels.GenericComboBoxModel;
import br.com.controle.visao.abstractModels.TabelaProfessor;

import javax.swing.*;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Objects;

/**
*
* @author WJS
*/
public class PainelHorario extends javax.swing.JInternalFrame {

    private GenericComboBoxModel<Turma> boxModelTurma;
    private final TabelaProfessor TABELA_PROFESSOR = new TabelaProfessor();
    private static PainelHorario painelHorario;
    private final DefaultListModel<Disciplina> listModelDiscipinas = new DefaultListModel<>();

    /**
     * Creates new form PainelProfessor
     */
    private PainelHorario() {
        initComponents();
        meuInitComponents();
    }

    private void meuInitComponents() {
        povoarTabelaPesquisarProfessor();
        povoarComboboxTurma();
        jListDisciplinas.setModel(listModelDiscipinas);
    }

    public static PainelHorario getInstancia() {
        if (painelHorario == null) {
            painelHorario = new PainelHorario();
        }
        return painelHorario;
    }

    private void povoarComboboxTurma() {
        ArrayList<Turma> turma = (ArrayList<Turma>) new TurmaRN().buscarTodos();
        boxModelTurma = new GenericComboBoxModel(turma);
        comboTurma.setModel(boxModelTurma);
        if (comboTurma.getItemCount() > 0) {
            comboTurma.setSelectedIndex(0);
        }
    }

    /* private List<Horario> encapsular() {
    Professor professor;
    List<Horario> horarios = null;
    
    if ((professor = getProfessorSelecionado()) != null) {
    List<Disciplina> disciplinas = new ArrayList<>();
    horarios = new ArrayList<>();
    if (!listModelDiscipinas.isEmpty()) {
    for (int i = 0; i < listModelDiscipinas.getSize(); i++) {
    disciplinas.add(listModelDiscipinas.get(i));
    }
    for (Disciplina disciplina : disciplinas) {
    Horario horario = new Horario();
    horario.setDisciplina(disciplina);
    horario.setProfessor(professor);
    if (comboTurma.getSelectedIndex() > -1) {
    horario.setTurma(boxModelTurma.get(comboTurma.getSelectedIndex()));
    }
    horarios.add(horario);
    }
    }
    }
    return horarios;
    }*/
    private void povoarTabelaPesquisarProfessor() {
        TABELA_PROFESSOR.addListaProfessor(new ProfessorRN().buscarTodos());
        tabelaPesquisaprofessor.setModel(TABELA_PROFESSOR);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        painelCadastroProfessor = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textoNomeProfessor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textoMatriculaProfessor = new javax.swing.JTextField();
        campoImagemProfessor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPesquisaprofessor = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDisciplinas = new javax.swing.JList();
        comboTurma = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();

        setBorder(null);
        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setLayout(new java.awt.CardLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Professor"));

        textoNomeProfessor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));

        jLabel1.setText("Nome: *");

        jLabel2.setText("Matr√≠cula: *");

        textoMatriculaProfessor.setEditable(false);
        textoMatriculaProfessor.setBackground(new java.awt.Color(255, 255, 255));
        textoMatriculaProfessor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));

        campoImagemProfessor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        campoImagemProfessor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controle/visao/icones/professor.png"))); // NOI18N
        campoImagemProfessor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        campoImagemProfessor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        campoImagemProfessor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        campoImagemProfessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoImagemProfessorMouseClicked(evt);
            }
        });

        tabelaPesquisaprofessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaPesquisaprofessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPesquisaprofessorMouseClicked(evt);
            }
        });
        tabelaPesquisaprofessor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaPesquisaprofessorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaPesquisaprofessorKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaPesquisaprofessor);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoMatriculaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textoNomeProfessor)))
                    .addComponent(jScrollPane2))
                .addGap(10, 10, 10)
                .addComponent(campoImagemProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(campoImagemProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textoMatriculaProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textoNomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jListDisciplinas.setBorder(javax.swing.BorderFactory.createTitledBorder("Disciplinas"));
        jScrollPane1.setViewportView(jListDisciplinas);

        comboTurma.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "turma" }));
        comboTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTurmaItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Turma:");

        btAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controle/visao/icones/add64.png"))); // NOI18N
        btAdicionar.setContentAreaFilled(false);
        btAdicionar.setFocusable(false);
        btAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controle/visao/icones/line32.png"))); // NOI18N
        btRemover.setContentAreaFilled(false);
        btRemover.setFocusable(false);
        btRemover.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        jBLimpar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBLimpar.setForeground(new java.awt.Color(255, 0, 0));
        jBLimpar.setText("LIMPAR");
        jBLimpar.setContentAreaFilled(false);
        jBLimpar.setFocusable(false);
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelCadastroProfessorLayout = new javax.swing.GroupLayout(painelCadastroProfessor);
        painelCadastroProfessor.setLayout(painelCadastroProfessorLayout);
        painelCadastroProfessorLayout.setHorizontalGroup(
            painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(8, 8, 8)
                                .addComponent(comboTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBLimpar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btAdicionar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btRemover, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );

        painelCadastroProfessorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btAdicionar, btRemover});

        painelCadastroProfessorLayout.setVerticalGroup(
            painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastroProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCadastroProfessorLayout.createSequentialGroup()
                        .addComponent(btAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemover)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Professor", painelCadastroProfessor);

        jPanel1.add(jTabbedPane1, "card3");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        Professor professor;
        if ((professor = getProfessorSelecionado()) != null) {
            Turma turma = boxModelTurma.get(comboTurma.getSelectedIndex());
            SelecionarDisciplina selecionarDisciplina = new SelecionarDisciplina(null, true);
            selecionarDisciplina.buscarDisciplinas(professor.getMatricula(), turma.getId());
            selecionarDisciplina.setVisible(true);
            Disciplina disciplina;
            if (!listModelDiscipinas.contains((disciplina = selecionarDisciplina.getDisciplina())) && disciplina != null) {
                listModelDiscipinas.insertElementAt(selecionarDisciplina.getDisciplina(), listModelDiscipinas.size());
                Horario horario = new Horario();
                horario.setProfessor(professor);
                horario.setDisciplina(disciplina);
                horario.setTurma(turma);
                if (new HorarioRN().salvar(horario)) {
                    povoarTabelaPesquisarProfessor();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Professor!", "INFORMA√á√ÉO", JOptionPane.INFORMATION_MESSAGE);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        if (jListDisciplinas.getSelectedIndex() > -1) {
            Disciplina disciplina = listModelDiscipinas.get(jListDisciplinas.getSelectedIndex());
            Turma turma = boxModelTurma.get(comboTurma.getSelectedIndex());
            Professor professor = getProfessorSelecionado();
            for (Horario horario : professor.getHorarios()) {
                if (Objects.equals(horario.getDisciplina().getId(), disciplina.getId())
                        && Objects.equals(horario.getTurma().getId(), turma.getId())) {
                    new HorarioRN().remover(horario.getId());
                    listModelDiscipinas.remove(jListDisciplinas.getSelectedIndex());
                    povoarTabelaPesquisarProfessor();
                }
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btRemoverActionPerformed

    private void campoImagemProfessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoImagemProfessorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_campoImagemProfessorMouseClicked

    private void tabelaPesquisaprofessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPesquisaprofessorMouseClicked
        selecionaProfessorNaTabela();
    }//GEN-LAST:event_tabelaPesquisaprofessorMouseClicked

    private void selecionaProfessorNaTabela() {
        Professor professor;
        if ((professor = getProfessorSelecionado()) != null) {
            textoNomeProfessor.setText(professor.getNome());
            textoMatriculaProfessor.setText(String.valueOf(professor.getMatricula()));
            GerenteDeImagens gerenteDeArquivos = new GerenteDeImagens();
            if (!gerenteDeArquivos.setImagemNaJlabel("./fotos/" + professor.getMatricula() + "".concat(".jpg"), campoImagemProfessor)) {
                campoImagemProfessor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controle/visao/icones/professor.png")));
            }
            if (comboTurma.getSelectedIndex() >= 0) {
                listModelDiscipinas.clear();
                if (professor.getHorarios() != null) {
                    for (Horario horario : professor.getHorarios()) {
                        if (Objects.equals(horario.getTurma().getId(), boxModelTurma.get(comboTurma.getSelectedIndex()).getId())) {
                            listModelDiscipinas.addElement(horario.getDisciplina());
                        }
                    }
                }
            }

        }        // TODO add your handling code here:
    }

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        limparCampos();        // TODO add your handling code here:
    }//GEN-LAST:event_jBLimparActionPerformed

    private void comboTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTurmaItemStateChanged
        selecionaProfessorNaTabela();        // TODO add your handling code here:
    }//GEN-LAST:event_comboTurmaItemStateChanged

    private void tabelaPesquisaprofessorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaPesquisaprofessorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaPesquisaprofessorKeyPressed

    private void tabelaPesquisaprofessorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaPesquisaprofessorKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            selecionaProfessorNaTabela();
        }          // TODO add your handling code here:
    }//GEN-LAST:event_tabelaPesquisaprofessorKeyReleased

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        painelHorario = null;        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btRemover;
    private javax.swing.JLabel campoImagemProfessor;
    private javax.swing.JComboBox comboTurma;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jListDisciplinas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel painelCadastroProfessor;
    private javax.swing.JTable tabelaPesquisaprofessor;
    private javax.swing.JTextField textoMatriculaProfessor;
    private javax.swing.JTextField textoNomeProfessor;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        textoMatriculaProfessor.setText(null);
        textoNomeProfessor.setText(null);
        listModelDiscipinas.clear();
        campoImagemProfessor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controle/visao/icones/professor.png")));
        tabelaPesquisaprofessor.clearSelection();
        povoarTabelaPesquisarProfessor();

    }

    private Professor getProfessorSelecionado() {
        int index = tabelaPesquisaprofessor.getSelectedRow();
        if (tabelaPesquisaprofessor.isRowSelected(index)) {
            return TABELA_PROFESSOR.getProfessor(index);
        }
        return null;
    }
}
